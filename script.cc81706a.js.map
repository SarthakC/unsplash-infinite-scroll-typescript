{"version":3,"sources":["app/script.ts"],"names":[],"mappings":"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","file":"script.cc81706a.js","sourceRoot":"../src","sourcesContent":["import { Image } from './unplash.models';\n\nconst imageContainer = document.getElementById(\n  'image-container',\n) as HTMLDivElement;\nconst loader = document.getElementById('loader') as HTMLDivElement;\n\nconst COUNT = 10;\nconst API_KEY = process.env.UNSPLASH_API_KEY;\n\nconst API_URL = `https://api.unsplash.com/photos/random?client_id=${API_KEY}&count=${COUNT}`;\n\nlet ready = false;\nlet imagesLoaded = 0;\n\nconst getPhotos = async (): Promise<Image[]> => {\n  try {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst setAttributes = (\n  element: HTMLAnchorElement | HTMLImageElement,\n  attributes: Record<string, any>,\n) => {\n  Object.keys(attributes).forEach((key) =>\n    element.setAttribute(key, attributes[key]),\n  );\n};\n\nconst imageLoaded = (photos: Image[]) => {\n  if (ready == false) loader.style.display = 'flex';\n  imagesLoaded += 1;\n  if (imagesLoaded === photos.length) {\n    ready = true;\n    loader.style.display = 'none';\n  }\n};\n\nconst displayPhotos = (photos: Image[]) => {\n  imagesLoaded = 0;\n  photos.forEach((photo) => {\n    const item = document.createElement('a');\n    setAttributes(item, { href: photo.links.html, target: '_blank' });\n    const img = document.createElement('img');\n    setAttributes(img, {\n      src: photo.urls.regular,\n      alt: photo.alt_description,\n      title: photo.alt_description,\n    });\n    img.addEventListener('load', () => imageLoaded(photos));\n    item.appendChild(img);\n    imageContainer.appendChild(item);\n  });\n};\n\nconst loadAndDisplayPhotos = async () => {\n  const photos = await getPhotos();\n  displayPhotos(photos);\n};\n\nwindow.addEventListener('scroll', () => {\n  if (\n    window.innerHeight + window.scrollY >= document.body.offsetHeight - 1000 &&\n    ready\n  ) {\n    ready = false;\n    loadAndDisplayPhotos();\n  }\n});\n\nconst onLoad = () => {\n  loadAndDisplayPhotos();\n};\n\nonLoad();\n"]}